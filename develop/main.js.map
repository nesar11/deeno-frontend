{"version":3,"sources":["./src/app/components/auth/register/register.component.ts","./src/app/components/auth/register/register.component.html","./src/app/service/coin.service.ts","./src/app/coin/search/search-routing.module.ts","fs (ignored)","./src/app/coin/search/search-result-item/search-result-item.component.html","./src/app/coin/search/search-result-item/search-result-item.component.ts","crypto (ignored)","stream (ignored)","./src/app/components/product/product-edit/product-edit.component.ts","./src/app/components/product/product-edit/product-edit.component.html","./src/app/components/advertise/ads-add/ads-add.component.ts","./src/app/components/advertise/ads-add/ads-add.component.html","./src/environments/environment.ts","./src/app/coin/search/widget-search-bar/widget-search-bar.component.ts","./src/app/coin/search/widget-search-bar/widget-search-bar.component.html","./src/app/service/project.service.ts","./src/app/coin/coin-update/coin-update.component.ts","./src/app/coin/coin-update/coin-update.component.html","./src/app/components/auth/login/login.component.ts","./src/app/components/auth/login/login.component.html","./src/app/components/auth/auth.module.ts","./src/app/components/advertise/ads-update/ads-update.component.ts","./src/app/components/advertise/ads-update/ads-update.component.html","./src/app/RouterConfig.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/advertise/ads-views/ads-views.component.html","./src/app/components/advertise/ads-views/ads-views.component.ts","./src/app/coin/search/search.service.ts","./src/app/components/project/p-add/p-add.component.ts","./src/app/components/project/p-add/p-add.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/components/gst/gst-view/gst-view.component.html","./src/app/components/gst/gst-view/gst-view.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/side-nav/side-nav.component.ts","./src/app/components/side-nav/side-nav.component.html","./src/app/components/auth/token-interceptor.service.ts","./src/app/coin/search/search-result-list/search-result-list.component.html","./src/app/coin/search/search-result-list/search-result-list.component.ts","./src/app/app.module.ts","./src/app/components/auth/auth.guard.ts","./src/app/components/auth/profile/profile.component.ts","./src/app/components/auth/profile/profile.component.html","./src/app/components/gst/gst-add/gst-add.component.ts","./src/app/components/gst/gst-add/gst-add.component.html","./src/app/service/adunit.service.ts","./src/app/coin/search/widget-search-bar-button/widget-search-bar-button.component.ts","./src/app/coin/search/widget-search-bar-button/widget-search-bar-button.component.html","./src/app/coin/search/search.module.ts","./src/app/components/auth/auth.service.ts","./src/app/components/product/product-view/product-view.component.html","./src/app/components/product/product-view/product-view.component.ts","./src/app/service/business.service.ts","./src/app/components/project/p-view/p-view.component.html","./src/app/components/project/p-view/p-view.component.ts","./src/app/service/product.service.ts","./src/app/components/auth/user-view/user-view.component.html","./src/app/components/auth/user-view/user-view.component.ts","./src/app/components/auth/auth.component.ts","./src/app/components/auth/auth.component.html","./src/app/coin/coin-views/coin-views.component.ts","./src/app/coin/coin-views/coin-views.component.html","./src/app/coin/coin-add/coin-add.component.ts","./src/app/coin/coin-add/coin-add.component.html","./src/app/components/product/product-add/product-add.component.ts","./src/app/components/product/product-add/product-add.component.html","./src/app/components/project/p-edit/p-edit.component.ts","./src/app/components/project/p-edit/p-edit.component.html","./src/app/components/gst/gst-edit/gst-edit.component.ts","./src/app/components/gst/gst-edit/gst-edit.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AuthService} from '../auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  formData: FormGroup;\r\n  errors: any = [];\r\n  constructor(private auth: AuthService,\r\n              private fb: FormBuilder,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n\r\n  }\r\n\r\n\r\n  initForm(): void {\r\n    this.formData = this.fb.group({\r\n      username: ['', Validators.required],\r\n      email: ['', [Validators.required,\r\n      Validators.pattern('^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$')]],\r\n      password: ['', Validators.required],\r\n      passwordConfirmation: ['', Validators.required]\r\n    });\r\n  }\r\n    register(): void {\r\n\r\n      this.errors = [];\r\n      console.log(this.formData);\r\n      this.auth.register(this.formData.value)\r\n        .subscribe(() => {\r\n          this.router.navigate(['/auth/login'], { queryParams: { registered: 'success' } });\r\n        },\r\n          (errorResponse) => {\r\n            console.log(errorResponse);\r\n            this.errors.push(errorResponse.error.error);\r\n\r\n          });\r\n    }\r\n\r\n}\r\n","<!-- register.component.html -->\r\n\r\n<div class=\"body\" fxLayoutAlign=\"center center\">\r\n  <div fxLayoutAlign=\"center center\" fxFlexFill class=\"main-div\">\r\n    <mat-card fxFlex=\"25\">\r\n      <mat-toolbar color=\"primary\"> register</mat-toolbar>\r\n      <form fxLayoutAlign=\"stretch\" fxLayout=\"column\" class=\"login-form\" [formGroup]= \"formData\">\r\n        <mat-form-field appearance=\"fill\">\r\n          <input type=\"email\" matInput formControlName=\"email\" placeholder=\"Ex. pat@example.com\">\r\n          <mat-icon matSuffix>person_outline</mat-icon>\r\n          <mat-error *ngIf=\"formData.get('email').hasError('pattern')\">\r\n            Please enter a valid email address\r\n          </mat-error>\r\n          <mat-error *ngIf=\"formData.get('email').hasError('required')\">\r\n            Email is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n          <input type=\"username\" matInput formControlName=\"username\" placeholder=\"eample: user11\">\r\n          <mat-icon matSuffix>person_outline</mat-icon>\r\n          <mat-error *ngIf=\"formData.get('username').hasError('pattern')\">\r\n            Please enter a valid username address\r\n          </mat-error>\r\n          <mat-error *ngIf=\"formData.get('username').hasError('required')\">\r\n            username is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field  appearance=\"fill\">\r\n          <input type=\"password\" matInput formControlName=\"password\" placeholder=\"Password\">\r\n          <mat-icon matSuffix>lock</mat-icon>\r\n          <mat-error *ngIf=\"formData.get('password').hasError('pattern')\">\r\n            Please enter a valid password\r\n          </mat-error>\r\n          <mat-error *ngIf=\"formData.get('password').hasError('required')\">\r\n            password is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field  appearance=\"fill\">\r\n          <input type=\"password\" matInput formControlName=\"passwordConfirmation\" placeholder=\"passwordConfirmation\">\r\n          <mat-icon matSuffix>lock</mat-icon>\r\n          <mat-error *ngIf=\"formData.get('passwordConfirmation').hasError('pattern')\">\r\n            Please enter a valid password\r\n          </mat-error>\r\n          <mat-error *ngIf=\"formData.get('passwordConfirmation').hasError('required')\">\r\n            passwordConfirmation is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <button mat-raised-button color=\"accent\" (click)=\"register()\"> Create user</button>\r\n        <div class=\"child-1\" class=\"register-button\" fxLayoutAlign=\"left right\">\r\n          <a href=\"\"></a><span mat-raised-button class=\"fxFlex\" fxFlex=\"50\" color=\"accent\"> Forget password</span>\r\n          <span mat-raised-button class=\"nav-link\" routerLink=\"/auth/login\" class=\"fxFlex\"  color=\"accent\"> Login</span>\r\n        </div>\r\n\r\n      </form>\r\n\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n\r\n<!--\r\n<div class=\"card\">\r\n\r\n  <div class=\"card-body\">\r\n\r\n      <h1 class=\"page-title\">User Registration</h1>\r\n      <form #registerForm=\"ngForm\">\r\n        <div class=\"form-group\">\r\n          <div *ngIf=\"errors.length > 0\" class=\"alert alert-danger\">\r\n          <ul *ngFor = \"let error of errors\">\r\n              <li>{{ error }}</li>\r\n          </ul>\r\n          </div>\r\n          <label for=\"username\">Username</label>\r\n         <input type=\"text\"\r\n                 class=\"form-control\"\r\n                 [(ngModel)] = \"formData.username\"\r\n                 name=\"username\"\r\n                 #username = \"ngModel\"\r\n                 required>\r\n        </div>\r\n        <div *ngIf=\"username.invalid && (username.dirty || username.touched)\"\r\n          class=\"alert alert-danger\">\r\n          <div *ngIf=\"username.errors.required\">\r\n            Username is required\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email</label>\r\n          <input type=\"email\"\r\n                 class=\"form-control\"\r\n                 [(ngModel)] = \"formData.email\"\r\n                 name=\"email\"\r\n                 #email = \"ngModel\"\r\n                 required>\r\n        </div>\r\n        <div *ngIf=\"email.invalid && (email.dirty || email.touched)\"\r\n          class=\"alert alert-danger\">\r\n          <div *ngIf=\"email.errors.required\">\r\n            Email is required\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input type=\"password\"\r\n                 class=\"form-control\"\r\n                 [(ngModel)] = \"formData.password\"\r\n                 #password = \"ngModel\"\r\n                 name=\"password\"\r\n                 required>\r\n        </div>\r\n        <div *ngIf=\"password.invalid && (password.dirty || password.touched)\"\r\n          class=\"alert alert-danger\">\r\n          <div *ngIf=\"password.errors.required\">\r\n            Password is required\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"passwordConfirmation\">Confirm Password</label>\r\n          <input type=\"password\"\r\n                 class=\"form-control\"\r\n                 [(ngModel)] = \"formData.passwordConfirmation\"\r\n                 #passwordConfirmation = \"ngModel\"\r\n                 name=\"passwordConfirmation\"\r\n                 required>\r\n        </div>\r\n         <div *ngIf=\"passwordConfirmation.invalid && (passwordConfirmation.dirty || passwordConfirmation.touched)\"\r\n          class=\"alert alert-danger\">\r\n          <div *ngIf=\"passwordConfirmation.errors.required\">\r\n            Confirm Password is required\r\n          </div>\r\n        </div>\r\n        <button\r\n        (click) = \"register()\"\r\n        type=\"submit\"\r\n        class=\"btn btn-warning\"\r\n        [disabled] = \"!registerForm.form.valid\">Register</button> <a routerLink=\"/auth/login\"> login</a>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n -->\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Subject } from \"rxjs\";\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\r\nimport Coin from '../models/Coin';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CoinService {\r\n  uri = environment.apiUrl;\r\n  result: any;\r\n  searchresult: any;\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n  };\r\n\r\n  // uri = 'http://localhost:4001/coins'\r\n\r\n  handleError: any;\r\n  constructor( private http: HttpClient) { }\r\n  addCoin(name, price) {\r\n    // const uri = 'http://localhost:4001/coins/add';\r\n    const obj = {\r\n      name: name,\r\n      price: price\r\n    };\r\n    this.http.post(`${this.uri}/coins/add`, obj)\r\n        .subscribe(res => console.log('Done'));\r\n  }\r\n\r\n  getCoins() {\r\n    return this.http.get(`${this.uri}/coins`);\r\n  }\r\n\r\n\r\n\r\n\r\n  editCoin(id) {\r\n    console.log(id);\r\n    return this\r\n            .http\r\n            .get(`${this.uri}/coins/edit/${id}`);\r\n\r\n    }\r\n\r\n  updateCoin(name, price, id) {\r\n\r\n\r\n\r\n    const obj = {\r\n      name: name,\r\n      price: price\r\n    };\r\n    this\r\n      .http\r\n      .post(`${this.uri}/coins/update/${id}`, obj)\r\n      .subscribe(res => console.log('Done'));\r\n  }\r\n  deleteCoin(id) {\r\n    // const uri = 'http://localhost:4001/coins/delete/' + id;\r\n\r\n        return this\r\n            .http\r\n            .get(`${this.uri}/coins/delete/${id}`)\r\n            .map(res => {\r\n              return res;\r\n            });\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SearchResultListComponent } from './search-result-list/search-result-list.component';\r\nimport { SearchResultItemComponent } from './search-result-item/search-result-item.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'search-results-list', component: SearchResultListComponent },\r\n  { path: 'search-results-item', component: SearchResultItemComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SearchRoutingModule {}\r\n","/* (ignored) */","<div class=\"mt-4 mb-4\" *ngIf=\"searchService.option$ | async as selectedOption\">\r\n\t<header *ngIf=\"selectedOption.id\">\r\n\t\t<h3>Selected Product</h3>\r\n\t</header>\r\n\t<div class=\"card\">\r\n\t\t<div class=\"row\" *ngIf=\"selectedOption.id\">\r\n\t\t\t<div class=\" col-3 p-4\">\r\n\r\n\t\t\t</div>\r\n\t\t\t<div class=\"col-9 p-4\">\r\n\t\t\t\t<h5>{{selectedOption.name}}</h5>\r\n\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span>Price: {{selectedOption.price}} </span>\r\n\r\n\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SearchService } from '../search.service';\r\n\r\n@Component({\r\n  selector: 'app-search-result-item',\r\n  templateUrl: './search-result-item.component.html',\r\n  styleUrls: ['./search-result-item.component.scss'],\r\n})\r\nexport class SearchResultItemComponent implements OnInit {\r\n  constructor(public searchService: SearchService) {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","/* (ignored) */","/* (ignored) */","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ProductService } from '../../../service/product.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-product-edit',\r\n  templateUrl: './product-edit.component.html',\r\n  styleUrls: ['./product-edit.component.css']\r\n})\r\nexport class ProductEditComponent implements OnInit {\r\n\r\n  angForm : FormGroup;\r\n  product : any = {};\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private ps : ProductService,\r\n    private fb : FormBuilder\r\n  ) {\r\n    this.createForm();\r\n  }\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n      ProductName: ['', Validators.required ],\r\n      ProductDescription: ['', Validators.required ],\r\n      ProductPrice: ['', Validators.required ],\r\n      StartDate: ['', Validators.required ],\r\n      EndDate: ['', Validators.required ],\r\n      Status: ['', Validators.required ],\r\n    });\r\n  }\r\n    ngOnInit(): void {\r\n      this.route.params.subscribe(params =>{\r\n        this.ps.editProduct(params['id']).subscribe(res => {\r\n          this.product = res;\r\n          console.log(this.product);\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  updateProduct(ProductName, ProductDescription, ProductPrice,StartDate, EndDate, Status) {\r\n    this.route.params.subscribe(params => {\r\n      this.ps.updateProduct(ProductName, ProductDescription, ProductPrice, StartDate, EndDate, Status, params['id']);\r\n      this.router.navigate(['products']);\r\n    });\r\n  }\r\n}\r\n\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <form [formGroup]=\"angForm\" novalidate>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Product Name</label>\r\n        <input type=\"text\" class=\"form-control\"\r\n          formControlName=\"ProductName\"\r\n          #ProductName\r\n          [(ngModel)] = \"product.ProductName\"/>\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['ProductName'].invalid && (angForm.controls['ProductName'].dirty || angForm.controls['ProductName'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['ProductName'].errors.required\">\r\n          Product Name is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Product Description </label>\r\n        <textarea class=\"form-control\" rows = 7 cols = \"5\"\r\n        formControlName=\"ProductDescription\"\r\n        #ProductDescription [(ngModel)] = \"product.ProductDescription\"></textarea>\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['ProductDescription'].invalid && (angForm.controls['ProductDescription'].dirty || angForm.controls['ProductDescription'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['ProductDescription'].errors.required\">\r\n          Product Description is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Product Price</label>\r\n        <input type=\"text\" class=\"form-control\"\r\n          formControlName=\"ProductPrice\"\r\n          #ProductPrice\r\n          [(ngModel)] = \"product.ProductPrice\"\r\n        />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['ProductPrice'].invalid && (angForm.controls['ProductPrice'].dirty || angForm.controls['ProductPrice'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['ProductPrice'].errors.required\">\r\n          Product Price is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Product Price</label>\r\n        <input type=\"text\" class=\"form-control\"\r\n          formControlName=\"StartDate\"\r\n          #StartDate\r\n          [(ngModel)] = \"product.StartDate\"\r\n        />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['StartDate'].invalid && (angForm.controls['StartDate'].dirty || angForm.controls['StartDate'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['StartDate'].errors.required\">\r\n          Start date is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Start date</label>\r\n        <input type=\"date\" class=\"form-control\"\r\n          formControlName=\"EndDate\"\r\n          #EndDate\r\n          [(ngModel)] = \"product.EndDate\"\r\n        />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['EndDate'].invalid && (angForm.controls['EndDate'].dirty || angForm.controls['EndDate'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['EndDate'].errors.required\">\r\n          End Date is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Status</label>\r\n        <input type=\"date\" class=\"form-control\"\r\n          formControlName=\"Status\"\r\n          #Status\r\n          [(ngModel)] = \"product.Status\"\r\n        />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['Status'].invalid && (angForm.controls['Status'].dirty || angForm.controls['Status'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['Status'].errors.required\">\r\n          Status is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button (click) = \"updateProduct(ProductName.value, ProductDescription.value, ProductPrice.value, StartDate.value, EndDate.value, Status.value )\" type=\"submit\" class=\"btn btn-primary\"\r\n        [disabled]=\"angForm.invalid\" >\r\n          Update Product\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\r\nimport {AdunitService} from '../../../service/adunit.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-ads-add',\r\n  templateUrl: './ads-add.component.html',\r\n  styleUrls: ['./ads-add.component.css']\r\n})\r\nexport class AdsAddComponent implements OnInit {\r\n\r\nangForm: FormGroup;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private adunitservice: AdunitService,\r\n    private fb: FormBuilder) {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm(){\r\n    this.angForm = this.fb.group({\r\n      unit_name: ['', Validators.required ],\r\n      unit_price: ['', Validators.required ]\r\n   });\r\n  }\r\n  addAdUnit(unit_name, unit_price) {\r\n    this.adunitservice.addAdUnit(unit_name, unit_price);\r\n    this.router.navigate(['adsUnits']);\r\n}\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <form [formGroup]=\"angForm\" novalidate>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Unit Name</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"unit_name\" formControlName=\"unit_name\" #unit_name/>\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['unit_name'].invalid && (angForm.controls['unit_name'].dirty || angForm.controls['unit_name'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['unit_name'].errors.required\">\r\n          Unit Name is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Unit Price</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"unit_price\" formControlName=\"unit_price\" #unit_price/>\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['unit_price'].invalid && (angForm.controls['unit_price'].dirty || angForm.controls['unit_price'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['unit_price'].errors.required\">\r\n          Unit Price is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button (click)=\"addAdUnit(unit_name.value, unit_price.value)\" [disabled]=\"angForm.pristine || angForm.invalid\" class=\"btn btn-primary\">Create Unit</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl:'http://localhost:4001'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, Subject, of } from 'rxjs';\r\nimport { SearchService } from '../search.service';\r\nimport { SearchOption } from '../searchOption';\r\nimport { Router } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\nimport {\r\n  map,\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n  switchMap,\r\n} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-widget-search-bar',\r\n  templateUrl: './widget-search-bar.component.html',\r\n  styleUrls: ['./widget-search-bar.component.scss'],\r\n})\r\nexport class WidgetSearchBarComponent implements OnInit {\r\n  searchResults$: Observable<SearchOption[]>;\r\n  term$ = new Subject<string>();\r\n  windowOpen$: Observable<boolean>;\r\n\r\n  constructor(private searchService: SearchService, private router: Router) {\r\n    this.searchResults$ = this.term$.pipe(\r\n      debounceTime(500),\r\n      distinctUntilChanged(),\r\n      switchMap((term) =>\r\n        term.length == 0 ? of([]) : this.searchService.search(term)\r\n      )\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.windowOpen$ = this.searchResults$.pipe(\r\n      map((searchOptionsArr) => (searchOptionsArr.length > 0 ? true : false))\r\n    );\r\n  }\r\n\r\n  searchOption(option: SearchOption) {\r\n    console.log(option);\r\n    let emptyArray: SearchOption[] = [];\r\n    this.searchService.updateSelectedOptions(emptyArray);\r\n    this.searchService.updateSelectedOption(option);\r\n    this.searchService.isOptionEmpty$ = this.searchService.option$.pipe(\r\n      map((option) => (option.id == null ? true : false))\r\n    );\r\n    this.router.navigate(['/search-results-item']);\r\n  }\r\n\r\n  onSubmit(f: NgForm) {\r\n    this.searchService.options$ = this.searchService.search(f.value.search);\r\n\r\n    this.searchService.updateSelectedOption({\r\n      id: null,\r\n      name: null,\r\n      price: null,\r\n\r\n    });\r\n\r\n    this.searchService.isOptionsEmpty$ = this.searchService.options$.pipe(\r\n      map((options) => (options.length == 0 ? true : false))\r\n    );\r\n\r\n    this.router.navigate(['/search-results-list']);\r\n    f.resetForm();\r\n  }\r\n\r\n  onblur() {\r\n    this.term$.next('');\r\n  }\r\n}\r\n","<div class=\"search-box\">\r\n\t<form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\">\r\n\r\n\t\t<input type=\"search\" name=\"search\" ngModel class=\"form-control form-control-lg\" type=\"text\" placeholder=\"Search\"\r\n\t\t\t   (keyup)=\"term$.next($event.target.value)\" autocomplete=\"off\" (blur)=\"onblur()\">\r\n\t</form>\r\n\r\n\t<div class=\"search-result\" *ngIf=\"windowOpen$|async\">\r\n\t\t<ul class=\"list-group\">\r\n\t\t\t<li class=\"list-group-item\" *ngFor=\"let item of searchResults$ | async\" (click)=\"searchOption(item)\">{{item.name}}</li>\r\n\t\t</ul>\r\n\t</div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectService {\r\n  // uri = 'http://localhost:4001/projects';\r\n  uri = environment.apiUrl\r\n\r\n  constructor( private http: HttpClient) { }\r\n  addProject(projectName, story, duration, startTime, endTime, status){\r\n    const obj = {\r\n      projectName,\r\n      story,\r\n      duration,\r\n      startTime,\r\n      endTime,\r\n      status\r\n    };\r\n    console.log(obj);\r\n    this.http.post(`${this.uri}/projects/add`, obj)\r\n    .subscribe(res => console.log('project add success'))\r\n  }\r\n\r\n  getProjects(){\r\n    return this.http.get(`${this.uri}/projects`);\r\n\r\n  }\r\n  editProject(id){\r\n    return this.http.get(`${this.uri}/projects/edit/${id}`);\r\n\r\n  }\r\n\r\n  updateProject(projectName, story, duration, startTime, endTime, status, id){\r\n    const obj = {\r\n      projectName,\r\n      story,\r\n      duration,\r\n      startTime,\r\n      endTime,\r\n      status\r\n    };\r\n    this.http.post(`${this.uri}/projects/update/${id}`, obj)\r\n    .subscribe(res=> console.log(' project updated'))\r\n\r\n  }\r\n\r\n  deleteProject(id){\r\n    return this.http.get(`${this.uri}/projects/delete/${id}`);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\r\nimport { CoinService} from'../../service/coin.service';\r\n@Component({\r\n  selector: 'app-coin-update',\r\n  templateUrl: './coin-update.component.html',\r\n  styleUrls: ['./coin-update.component.css']\r\n})\r\nexport class CoinUpdateComponent implements OnInit {\r\n  title: 'Coin bit';\r\n coin : any;\r\n angForm: FormGroup;\r\n  constructor(private route: ActivatedRoute, private router: Router, private service: CoinService, private fb: FormBuilder) {\r\n    this.createForm();\r\n   }\r\n\r\n\r\n  createForm(){\r\n    this.angForm=this.fb.group({\r\n      name:['', Validators.required],\r\n      price:['', Validators.required]\r\n    })\r\n  }\r\n  updateCoin(name, price) {\r\n    this.route.params.subscribe(params => {\r\n    this.service.updateCoin(name, price, params['id']);\r\n    this.router.navigate(['coins']);\r\n  });\r\n}\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(params => {\r\n      this.coin = this.service.editCoin(params['id']).subscribe(res => {\r\n        this.coin = res;\r\n        console.log(this.coin);\r\n      });\r\n    });\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n\r\n  </div>\r\n\r\n    <form [formGroup]=\"angForm\" novalidate>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Coin Name</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"name\" #name [(ngModel)] = \"coin.name\"/>\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['name'].invalid && (angForm.controls['name'].dirty || angForm.controls['name'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['name'].errors.required\">\r\n          Name is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Coin Price</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"price\" #price [(ngModel)] = \"coin.price\" />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['price'].invalid && (angForm.controls['price'].dirty || angForm.controls['price'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['price'].errors.required\">\r\n          Price is required.\r\n        </div>\r\n      </div>\r\n        <div class=\"form-group\">\r\n          <button (click)=\"updateCoin(name.value, price.value)\" [disabled]=\"angForm.pristine || angForm.invalid\" class=\"btn btn-primary\">Update</button>\r\n        </div>\r\n    </form>\r\n  </div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\nimport { SideNavComponent } from '../../side-nav/side-nav.component';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  errors: any = [];\r\n  notify: string;\r\n\r\n  constructor(private auth: AuthService,\r\n              private router: Router,\r\n              private fb: FormBuilder,\r\n              private route: ActivatedRoute,\r\n              private sideNav : SideNavComponent) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n    this.route.queryParams.subscribe((params) => {\r\n      const key1 = 'registered';\r\n      const key2 = 'loggedOut';\r\n      if (params[key1] === 'success') {\r\n        this.notify = 'You have been successfully registered. Please Log in';\r\n      }\r\n      if (params[key2] === 'success') {\r\n        this.notify = 'You have been loggedout successfully';\r\n      }\r\n    });\r\n  }\r\n\r\n\r\ninitForm(): void {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', [Validators.required,\r\n      Validators.pattern('^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$')]],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  isValidInput(fieldName): boolean {\r\n    return this.loginForm.controls[fieldName].invalid &&\r\n      (this.loginForm.controls[fieldName].dirty || this.loginForm.controls[fieldName].touched);\r\n  }\r\n\r\n  login(): void {\r\n    console.log('login method call');\r\n    this.errors = [];\r\n    this.auth.login(this.loginForm.value)\r\n      .subscribe((token) => {\r\n        this.sideNav.isLoggedIn = true;\r\n        this.router.navigate(['/coins'], { queryParams: { loggedin: 'success' } });\r\n       },\r\n        (errorResponse) => {\r\n          this.errors.push(errorResponse.error.error);\r\n        });\r\n  }\r\n\r\n}\r\n","<div class=\"body\" fxLayoutAlign=\"center center\">\r\n  <div fxLayoutAlign=\"center center\" fxFlexFill class=\"main-div\">\r\n    <mat-card fxFlex=\"25\">\r\n      <mat-toolbar color=\"primary\"> Login </mat-toolbar>\r\n      <form fxLayoutAlign=\"stretch\" fxLayout=\"column\" class=\"login-form\" [formGroup]= \"loginForm\">\r\n        <mat-form-field appearance=\"fill\">\r\n          <input type=\"email\" matInput formControlName=\"email\" placeholder=\"Ex. pat@example.com\">\r\n          <mat-icon matSuffix>person_outline</mat-icon>\r\n          <mat-error *ngIf=\"loginForm.get('email').hasError('pattern')\">\r\n            Please enter a valid email address\r\n          </mat-error>\r\n          <mat-error *ngIf=\"loginForm.get('email').hasError('required')\">\r\n            Email is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field  appearance=\"fill\">\r\n          <input type=\"password\" matInput formControlName=\"password\" placeholder=\"Password\">\r\n          <mat-icon matSuffix>lock</mat-icon>\r\n          <mat-error *ngIf=\"loginForm.get('password').hasError('pattern')\">\r\n            Please enter a valid password\r\n          </mat-error>\r\n          <mat-error *ngIf=\"loginForm.get('password').hasError('required')\">\r\n            password is <strong>required</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <button mat-raised-button color=\"accent\" (click)=\"login()\"> Login</button>\r\n        <div class=\"child-1\" class=\"register-button\" fxLayoutAlign=\"left right\">\r\n          <a href=\"\"></a><span mat-raised-button class=\"fxFlex\" fxFlex=\"50\" color=\"accent\"> Forget password</span>\r\n          <span mat-raised-button class=\"nav-link\" routerLink=\"/auth/register\" class=\"fxFlex\"  color=\"accent\"> New account</span>\r\n        </div>\r\n\r\n      </form>\r\n\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { AuthComponent } from '../../components/auth/auth.component';\r\n\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { AuthGuard} from '../auth/auth.guard';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { UserViewComponent } from './user-view/user-view.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nconst routes: Routes = [\r\n  {\r\n    path: 'auth',\r\n    component: AuthComponent,\r\n    children: [\r\n\r\n      { path: 'login', component: LoginComponent ,canActivate: [AuthGuard]},\r\n      { path: 'register', component: RegisterComponent, canActivate: [AuthGuard] },\r\n      { path: 'users', component: UserViewComponent, canActivate: [AuthGuard] }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    ProfileComponent,\r\n    AuthComponent,\r\n    UserViewComponent\r\n  ],\r\n  imports: [ RouterModule.forChild(routes),\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    FlexLayoutModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatIconModule\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n  providers:[AuthService, AuthGuard]\r\n})\r\nexport class AuthModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\r\nimport { AdUnit } from '../../../models/AdUnit';\r\nimport { AdunitService } from '../../../service/adunit.service';\r\n@Component({\r\n  selector: 'app-ads-update',\r\n  templateUrl: './ads-update.component.html',\r\n  styleUrls: ['./ads-update.component.css']\r\n})\r\nexport class AdsUpdateComponent implements OnInit {\r\n  adunit : any= [];\r\n  angForm : FormGroup;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private router : Router,\r\n              private adunitService : AdunitService,\r\n              private fb : FormBuilder) {\r\n                this.createFrom();\r\n              }\r\n\r\n  createFrom(){\r\n    this.angForm = this.fb.group({\r\n      unit_name : ['', Validators.required],\r\n      unit_price : ['', Validators.required],\r\n    });\r\n  };\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      this.adunitService.editAdUnit(params['id']).subscribe(res =>{\r\n        this.adunit = res;\r\n      })\r\n    })\r\n  }\r\n\r\n  updateAdUnit(unit_name, unit_price) {\r\n    this.route.params.subscribe(params => {\r\n       this.adunitService.updateAdUnit(unit_name, unit_price, params['id']);\r\n       this.router.navigate(['adsUnits']);\r\n    });\r\n }\r\n\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <form [formGroup]=\"angForm\" novalidate>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Unit Name</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"unit_name\" formControlName=\"unit_name\" #unit_name [(ngModel)] = \"adunit.unit_name\"/>\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['unit_name'].invalid && (angForm.controls['unit_name'].dirty || angForm.controls['unit_name'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['unit_name'].errors.required\">\r\n          Unit Name is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Unit Price</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"unit_price\" formControlName=\"unit_price\" #unit_price [(ngModel)] = \"adunit.unit_price\"/>\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['unit_price'].invalid && (angForm.controls['unit_price'].dirty || angForm.controls['unit_price'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['unit_price'].errors.required\">\r\n          Unit Price is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button (click)=\"updateAdUnit(unit_name.value, unit_price.value)\" [disabled]=\"angForm.invalid\" class=\"btn btn-primary\">Update Unit</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes,RouterModule } from '@angular/router';\r\nimport { CoinAddComponent } from './coin/coin-add/coin-add.component';\r\nimport { CoinViewsComponent } from './coin/coin-views/coin-views.component';\r\nimport { CoinUpdateComponent } from './coin/coin-update/coin-update.component';\r\nimport { AdsAddComponent } from './components/advertise/ads-add/ads-add.component';\r\nimport { AdsUpdateComponent } from './components/advertise/ads-update/ads-update.component';\r\nimport { AdsViewsComponent } from './components/advertise/ads-views/ads-views.component';\r\nimport { GstAddComponent } from './components/gst/gst-add/gst-add.component';\r\nimport { GstEditComponent } from './components/gst/gst-edit/gst-edit.component';\r\nimport { GstViewComponent } from './components/gst/gst-view/gst-view.component';\r\nimport { ProductAddComponent } from './components/product/product-add/product-add.component';\r\nimport { ProductEditComponent } from './components/product/product-edit/product-edit.component';\r\nimport { ProductViewComponent } from './components/product/product-view/product-view.component';\r\nimport { PAddComponent } from './components/project/p-add/p-add.component';\r\nimport { PEditComponent } from './components/project/p-edit/p-edit.component';\r\nimport { PViewComponent } from './components/project/p-view/p-view.component';\r\nimport { AuthGuard } from './components/auth/auth.guard';\r\nexport const routes: Routes = [\r\n  // { path: '**', redirectTo: '' },\r\n  {path: 'add', component: CoinAddComponent, canActivate: [AuthGuard]},\r\n  {path: 'coins', component: CoinViewsComponent, canActivate: [AuthGuard] },\r\n  {path: 'edit/:id', component: CoinUpdateComponent, canActivate: [AuthGuard]},\r\n  {path: 'create', component: AdsAddComponent, canActivate: [AuthGuard]},\r\n  {path: 'adsUnits', component: AdsViewsComponent, canActivate: [AuthGuard]},\r\n  {path: 'adsEdit/:id', component: AdsUpdateComponent, canActivate: [AuthGuard]},\r\n  {path: 'gstAdd', component: GstAddComponent, canActivate: [AuthGuard]},\r\n  {path: 'business', component: GstViewComponent, canActivate: [AuthGuard]},\r\n  {path: 'business/:id', component: GstEditComponent, canActivate: [AuthGuard]},\r\n  {path: 'productAdd', component: ProductAddComponent, canActivate: [AuthGuard]},\r\n  {path: 'products', component: ProductViewComponent, canActivate: [AuthGuard]},\r\n  {path: 'product/:id', component: ProductEditComponent, canActivate: [AuthGuard]},\r\n  {path: 'projectAdd', component: PAddComponent, canActivate: [AuthGuard]},\r\n  {path: 'projects', component: PViewComponent, canActivate: [AuthGuard]},\r\n  {path: 'project/:id', component: PEditComponent, canActivate: [AuthGuard]},\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers:[AuthGuard]\r\n})\r\nexport class AppRoutingModule { }\r\n","<div *ngIf=\"notify\" class=\"alert alert-success container marge\">\r\n  {{ notify }}\r\n</div>\r\n<p class=\"container\">home page!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  notify: string;\r\n  constructor(private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe((params) => {\r\n      const key1 = 'loggedin';\r\n      if (params[key1] === 'success') {\r\n        this.notify = 'You have been successfully loggedin. Welcome home';\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-light bg-light\">\r\n  <form class=\"form-inline\">\r\n    <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\r\n    <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n  </form>\r\n</nav>\r\n<div class=\"space\">\r\n  <table class=\"table table-hover\">\r\n    <thead>\r\n    <tr>\r\n        <td>Ad Unit Name</td>\r\n        <td>Ad Unit Price</td>\r\n        <td>Date</td>\r\n        <td>Action </td>\r\n        <td> <button class=\"nav-link\" routerLink=\"/create\" class=\"btn btn-primary\">Add</button></td>\r\n    </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n        <tr *ngFor=\"let adunit of adunits\">\r\n            <td>{{ adunit.unit_name }}</td>\r\n            <td>{{ adunit.unit_price }}</td>\r\n            <td>{{adunit.updatedAt | date:'medium'}}  </td>\r\n            <td><button [routerLink]=\"['/adsEdit', adunit._id]\" class=\"btn btn-primary\">Edit</button>\r\n            <button (click)=\"deleteAdUnit(adunit._id)\" class=\"btn btn-danger\">Delete</button></td>\r\n        </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {AdunitService} from '../../../service/adunit.service';\r\nimport { AdUnit } from '../../../models/AdUnit';\r\n\r\n@Component({\r\n  selector: 'app-ads-views',\r\n  templateUrl: './ads-views.component.html',\r\n  styleUrls: ['./ads-views.component.css']\r\n})\r\nexport class AdsViewsComponent implements OnInit {\r\n  adunits: AdUnit[];\r\n\r\n\r\n  constructor(private adunitservice: AdunitService,\r\n              private http : HttpClient) { }\r\n\r\n  ngOnInit() {\r\n    this.adunitservice\r\n      .getAdUnits()\r\n      .subscribe((data: AdUnit[]) => {\r\n      this.adunits = data;\r\n    });\r\n  }\r\n  deleteAdUnit(id) {\r\n    this.adunitservice.deleteAdUnit(id).subscribe(res => {\r\n      console.log('Deleted');\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { SearchOption } from './searchOption';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SearchService {\r\n  private SERVER_URL = 'http://localhost:4001/coins/';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  private selectedOption = new BehaviorSubject<SearchOption>({\r\n    id: null,\r\n    name: null,\r\n    price: null\r\n  });\r\n\r\n  private selectedOptions = new BehaviorSubject<SearchOption[]>([]);\r\n\r\n  option$ = this.selectedOption.asObservable();\r\n  options$ = this.selectedOptions.asObservable();\r\n\r\n  isOptionEmpty$: Observable<boolean>;\r\n\r\n  isOptionsEmpty$: Observable<boolean>;\r\n\r\n  search(q: string): Observable<SearchOption[]> {\r\n    return this.http.get<SearchOption[]>(\r\n      this.SERVER_URL + 'search?name=' + q\r\n    );\r\n  }\r\n\r\n  updateSelectedOption(option: SearchOption) {\r\n    this.selectedOption.next(option);\r\n  }\r\n\r\n  updateSelectedOptions(options: SearchOption[]) {\r\n    this.selectedOptions.next(options);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,  FormBuilder,  Validators, Form } from '@angular/forms';\r\nimport { ProjectService} from '../../../service/project.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-p-add',\r\n  templateUrl: './p-add.component.html',\r\n  styleUrls: ['./p-add.component.css']\r\n})\r\nexport class PAddComponent implements OnInit {\r\n  angForm : FormGroup;\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private fb: FormBuilder,\r\n              private pjs: ProjectService) {\r\n                this.createForm()\r\n              }\r\n    createForm(){\r\n      this.angForm = this.fb.group({\r\n        projectName: ['', Validators.required ],\r\n        story: ['', Validators.required ],\r\n        duration: ['', Validators.required ],\r\n        startTime: ['', Validators.required ],\r\n        endTime: ['', Validators.required ],\r\n        status: ['', Validators.required ],\r\n      })\r\n    }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  addProject( projectName, story, duration, startTime, endTime, status){\r\nthis.pjs.addProject(projectName, story, duration, startTime, endTime, status);\r\nthis.router.navigate(['projects']);\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n\r\n  <div class=\"card-body\">\r\n    <form [formGroup]=\"angForm\" novalidate>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Project Name</label>\r\n        <input type=\"text\" class=\"form-control\"\r\n          formControlName=\"projectName\"\r\n          #projectName />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['projectName'].invalid && (angForm.controls['projectName'].dirty || angForm.controls['projectName'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['projectName'].errors.required\">\r\n          Project Name is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Story </label>\r\n        <textarea class=\"form-control\" rows = 7 cols = \"5\"\r\n        formControlName=\"story\"\r\n        #story></textarea>\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['story'].invalid && (angForm.controls['story'].dirty || angForm.controls['story'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['story'].errors.required\">\r\n         Story is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Project Price</label>\r\n        <input type=\"text\" class=\"form-control\"\r\n          formControlName=\"duration\"\r\n          #duration\r\n        />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['duration'].invalid && (angForm.controls['duration'].dirty || angForm.controls['duration'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['duration'].errors.required\">\r\n          Duration is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Start Time</label>\r\n        <input type=\"date\" class=\"form-control\"\r\n          formControlName=\"startTime\"\r\n          #startTime\r\n        />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['startTime'].invalid && (angForm.controls['startTime'].dirty || angForm.controls['startTime'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['startTime'].errors.required\">\r\n          Start Time is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">End Time</label>\r\n        <input type=\"date\" class=\"form-control\"\r\n          formControlName=\"endTime\"\r\n          #endTime\r\n        />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['endTime'].invalid && (angForm.controls['endTime'].dirty || angForm.controls['endTime'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['endTime'].errors.required\">\r\n          End Time is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">status Time</label>\r\n        <input type=\"text\" class=\"form-control\"\r\n          formControlName=\"status\"\r\n          #status\r\n        />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['status'].invalid && (angForm.controls['status'].dirty || angForm.controls['status'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['status'].errors.required\">\r\n          status is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button (click) = \"addProject(projectName.value, story.value, duration.value, startTime.value, endTime.value, status.value)\" type=\"submit\" class=\"btn btn-primary\"\r\n        [disabled]=\"angForm.pristine || angForm.invalid\" >\r\n          Create Project\r\n        </button>\r\n</div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","<nav class=\"navbar navbar-light bg-light\">\r\n  <form class=\"form-inline\">\r\n    <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\r\n    <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n  </form>\r\n</nav>\r\n<table class=\"table table-hover\">\r\n  <thead>\r\n  <tr>\r\n      <td>Person Name</td>\r\n      <td>Business Name</td>\r\n      <td>GST Number</td>\r\n      <td>Actions</td>\r\n      <td> <button class=\"nav-link\" routerLink=\"/gstAdd\" class=\"btn btn-primary\">Add</button></td>\r\n  </tr>\r\n  </thead>\r\n\r\n  <tbody>\r\n      <tr *ngFor=\"let business of businesses\">\r\n          <td>{{ business.person_name }}</td>\r\n          <td>{{ business.business_name }}</td>\r\n          <td>{{ business.business_gst_number }}</td>\r\n          <td><a [routerLink]=\"['/business', business._id]\" class=\"btn btn-primary\">Edit</a></td>\r\n          <td><a (click) = \"deleteBusiness(business._id)\" class=\"btn btn-danger\">Delete</a></td>\r\n      </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport Business from '../../../models/Business';\r\nimport { BusinessService } from '../../../service/business.service';\r\n\r\n@Component({\r\n  selector: 'app-gst-view',\r\n  templateUrl: './gst-view.component.html',\r\n  styleUrls: ['./gst-view.component.css']\r\n})\r\nexport class GstViewComponent implements OnInit {\r\n  businesses: Business[];\r\n\r\n  constructor( private bs: BusinessService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.bs\r\n      .getBusinesses()\r\n      .subscribe((data: Business[]) => {\r\n        this.businesses = data;\r\n        console.log(this.businesses);\r\n    });\r\n  }\r\n  deleteBusiness(id) {\r\n    this.bs.deleteBusiness(id).subscribe(res => {\r\n      console.log('Deleted');\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport {SlimLoadingBarService} from 'ng2-slim-loading-bar';\r\nimport { NavigationCancel,\r\n  Event,\r\n  NavigationEnd,\r\n  NavigationError,\r\n  NavigationStart,\r\n  Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Coin module';\r\n  constructor(private _loadingBar: SlimLoadingBarService, private _router: Router) {\r\n    this._router.events.subscribe((event: Event) => {\r\n      this.navigationInterceptor(event);\r\n    });\r\n  }\r\n  private navigationInterceptor(event: Event): void {\r\n    if (event instanceof NavigationStart) {\r\n      this._loadingBar.start();\r\n    }\r\n    if (event instanceof NavigationEnd) {\r\n      this._loadingBar.complete();\r\n    }\r\n    if (event instanceof NavigationCancel) {\r\n      this._loadingBar.stop();\r\n    }\r\n    if (event instanceof NavigationError) {\r\n      this._loadingBar.stop();\r\n    }\r\n  }\r\n}\r\n","<app-side-nav></app-side-nav>\r\n <!-- <app-login></app-login> -->\r\n","import { Component,OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport {AuthService} from '../auth/auth.service';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\n\r\n@Component({\r\n  selector: 'app-side-nav',\r\n  templateUrl: './side-nav.component.html',\r\n  styleUrls: ['./side-nav.component.css']\r\n})\r\nexport class SideNavComponent  implements OnInit {\r\n\r\n  @ViewChildren('drawer') sc: QueryList<MatSidenav>;\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n    isLoggedIn : boolean = false;\r\n  constructor(private breakpointObserver: BreakpointObserver,\r\n    public auth: AuthService, private router: Router) {}\r\n\r\n    ngOnInit(): void {\r\n      if (window.location.pathname === '/auth/login' || window.location.pathname.includes('/auth/register')) {\r\n        this.isLoggedIn = false;\r\n      } else {\r\n        this.isLoggedIn = true;\r\n      }\r\n    }\r\n    onSideNavToggle() {\r\n      this.sc.first.toggle();\r\n    }\r\n\r\n    logout(): void {\r\n      this.isLoggedIn = false;\r\n      this.auth.logout();\r\n      this.router.navigate(['/auth/login'], {queryParams: {loggedOut: 'success'}});\r\n\r\n    }\r\n\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\r\n  *ngIf=\"isLoggedIn\"\r\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n      [opened]=\"(isHandset$ | async) === false\">\r\n    <mat-toolbar>Dashboard</mat-toolbar>\r\n    <mat-nav-list>\r\n      <a mat-list-item href=\"#\" routerLinkActive=\"active\"><span class=\"navIcon material-icons\">insights</span> Statistics</a>\r\n      <a mat-list-item routerLink=\"/coins\" routerLinkActive=\"active\"><span class=\"navIcon material-icons\">monetization_on</span> coins</a>\r\n      <a mat-list-item routerLink=\"/adsUnits\" routerLinkActive=\"active\">\r\n        <span class=\" navIcon material-icons\" routerLinkActive=\"active\">featured_video</span>Advertise</a>\r\n      <a mat-list-item routerLink=\"/business\" routerLinkActive=\"active\">\r\n        <span class=\"navIcon material-icons\"routerLinkActive=\"active\">business</span>Business</a>\r\n      <a mat-list-item routerLink=\"/products\" routerLinkActive=\"active\"> <span class=\" navIcon material-icons\">production_quantity_limits</span>Product</a>\r\n\r\n      <a mat-list-item routerLink=\"/projects\" routerLinkActive=\"active\"> <span class=\" navIcon material-icons\">group_work</span>projects</a>\r\n      <a mat-list-item routerLink=\"/auth/users\" routerLinkActive=\"active\"> <span class=\" navIcon material-icons\">people_outline</span>Users</a>\r\n      <a mat-list-item class=\"nav-link pointer\" (click)=\"logout()\"> <span class=\" navIcon material-icons\">verified</span>Logout</a>\r\n\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <mat-toolbar color=\"primary\" *ngIf=\"isLoggedIn\">\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"Toggle sidenav\"\r\n        mat-icon-button\r\n        (click)=\"onSideNavToggle()\">\r\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n      </button>\r\n      <span>Deeno</span>\r\n    </mat-toolbar>\r\n    <!-- Add Content Here -->\r\n    <router-outlet></router-outlet>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport {\r\n  HttpErrorResponse,\r\n  HttpInterceptor,\r\n  HttpResponse,\r\n} from '@angular/common/http';\r\nimport { AuthService } from './auth.service';\r\nimport { throwError } from 'rxjs';\r\nimport { tap, catchError } from 'rxjs/operators';\r\n@Injectable()\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  intercept(req, next) {\r\n    console.log('=== auth_token:', this.authService.getToken());\r\n    let tokenizedReq = req.clone({\r\n      headers: req.headers.set(\r\n        'Authorization',\r\n        'Bearer ' + this.authService.getToken()\r\n      ),\r\n    });\r\n    return next.handle(tokenizedReq).pipe(\r\n      tap((event) => {\r\n        if (event instanceof HttpResponse) {\r\n          //any operation when success\r\n        }\r\n      }),\r\n      catchError((err) => {\r\n        if (err instanceof HttpErrorResponse) {\r\n          if (err.status === 401) {\r\n            alert('Session Timeout...!');\r\n          }\r\n        }\r\n        return throwError(err);\r\n      })\r\n    );\r\n  }\r\n}\r\n","<ng-template [ngIf]=\"searchService.isOptionsEmpty$ | async\" [ngIfElse]=\"show\">\r\n\t<p>\r\n\t\tNo Search List Available\r\n\t</p>\r\n</ng-template>\r\n\r\n<ng-template #show>\r\n\t<div class=\"mt-4 mb-4\" *ngIf=\"searchService.options$ | async as selectedOptions\">\r\n\t\t<header *ngIf=\"selectedOptions.length > 0\">\r\n\t\t\t<h3>Search Result list</h3>\r\n\t\t</header>\r\n\t\t<div class=\"card\" *ngFor=\"let item of selectedOptions\">\r\n\t\t\t<div class=\"row\" *ngIf=\"selectedOptions.length > 0\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div class=\" col-3 p-4\">\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"col-9 p-4\">\r\n\t\t\t\t\t\t<h5>{{item.name}}</h5>\r\n\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span>Price: {{item.price}} </span>\r\n\r\n\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</ng-template>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SearchService } from '../search.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-search-result-list',\r\n  templateUrl: './search-result-list.component.html',\r\n  styleUrls: ['./search-result-list.component.scss'],\r\n})\r\nexport class SearchResultListComponent implements OnInit {\r\n  constructor(public searchService: SearchService) {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { CoinAddComponent } from './coin/coin-add/coin-add.component';\r\nimport { CoinViewsComponent } from './coin/coin-views/coin-views.component';\r\nimport { CoinUpdateComponent } from './coin/coin-update/coin-update.component';\r\nimport { AppRoutingModule} from './RouterConfig';\r\nimport { AdsAddComponent } from './components/advertise/ads-add/ads-add.component';\r\nimport { AdsUpdateComponent } from './components/advertise/ads-update/ads-update.component';\r\nimport { AdsViewsComponent } from './components/advertise/ads-views/ads-views.component';\r\nimport { SlimLoadingBarModule } from 'ng2-slim-loading-bar';\r\nimport { ProductAddComponent } from './components/product/product-add/product-add.component';\r\nimport { ProductEditComponent } from './components/product/product-edit/product-edit.component';\r\nimport { ProductViewComponent } from './components/product/product-view/product-view.component';\r\nimport { GstAddComponent } from './components/gst/gst-add/gst-add.component';\r\nimport { GstEditComponent } from './components/gst/gst-edit/gst-edit.component';\r\nimport { GstViewComponent } from './components/gst/gst-view/gst-view.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SideNavComponent } from './components/side-nav/side-nav.component';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\n\r\nimport { TokenInterceptorService} from './components/auth/token-interceptor.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { PAddComponent } from './components/project/p-add/p-add.component';\r\nimport { PEditComponent } from './components/project/p-edit/p-edit.component';\r\nimport { PViewComponent } from './components/project/p-view/p-view.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport {AuthModule} from './components/auth/auth.module';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport {SearchModule } from './coin/search/search.module';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CoinAddComponent,\r\n    CoinViewsComponent,\r\n    CoinUpdateComponent,\r\n    AdsAddComponent,\r\n    AdsUpdateComponent,\r\n    AdsViewsComponent,\r\n    GstAddComponent,\r\n    GstEditComponent,\r\n    GstViewComponent,\r\n    ProductAddComponent,\r\n    ProductEditComponent,\r\n    ProductViewComponent,\r\n    SideNavComponent,\r\n    PAddComponent,\r\n    PEditComponent,\r\n    PViewComponent,\r\n    DashboardComponent,\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AuthModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    SlimLoadingBarModule,\r\n    BrowserAnimationsModule,\r\n    LayoutModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    MDBBootstrapModule.forRoot(),\r\n    SearchModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptorService,\r\n      multi: true\r\n    }\r\n  ],\r\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  private url: string;\r\n  constructor(private auth: AuthService, private router: Router) { }\r\n\r\n  private authState(): boolean {\r\n    if (this.isLoginOrRegister()) {\r\n      this.router.navigate(['/']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private notAuthState(): boolean {\r\n    if (this.isLoginOrRegister()) {\r\n      return true;\r\n    }\r\n    this.router.navigate(['/auth/login']);\r\n    return false;\r\n  }\r\n  private isLoginOrRegister(): boolean {\r\n    if (this.url.includes('/auth/login') || this.url.includes('/auth/register')) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): any {\r\n    this.url = state.url;\r\n    if (this.auth.isAuthenticated()) {\r\n     return this.authState();\r\n    }\r\n    return this.notAuthState();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>profile works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\r\nimport {BusinessService} from '../../../service/business.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-gst-add',\r\n  templateUrl: './gst-add.component.html',\r\n  styleUrls: ['./gst-add.component.css']\r\n})\r\nexport class GstAddComponent implements OnInit {\r\n  angForm: FormGroup;\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private fb: FormBuilder,\r\n              private bs: BusinessService) {\r\n              this.createForm();\r\n  }\r\n  createForm(){\r\n    this.angForm = this.fb.group({\r\n      person_name: ['', Validators.required ],\r\n      business_name: ['', Validators.required ],\r\n      business_gst_number: ['', Validators.required ]\r\n    });\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n  addBusiness(person_name, busines_name, business_gst_number) {\r\n    this.bs.addBusiness(person_name, busines_name, business_gst_number);\r\n    this.router.navigate(['business']);\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <form [formGroup]=\"angForm\" novalidate>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Person Name</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"person_name\" #person_name />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['person_name'].invalid && (angForm.controls['person_name'].dirty || angForm.controls['person_name'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['person_name'].errors.required\">\r\n          Person Name is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Business Name </label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"business_name\" #business_name />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['business_name'].invalid && (angForm.controls['business_name'].dirty || angForm.controls['business_name'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['business_name'].errors.required\">\r\n          Person Business is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Business GST Number </label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"business_gst_number\" #business_gst_number />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['business_gst_number'].invalid && (angForm.controls['business_gst_number'].dirty || angForm.controls['business_gst_number'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['business_gst_number'].errors.required\">\r\n           GST is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button (click)=\"addBusiness(person_name.value, business_name.value, business_gst_number.value)\"\r\n            [disabled]=\"angForm.pristine || angForm.invalid\"\r\n            class=\"btn btn-primary\">\r\n            Add Business\r\n         </button>\r\n    </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdunitService {\r\n\r\n  uri = 'http://localhost:4001/adunits';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  addAdUnit(unit_name, unit_price) {\r\n    const obj = {\r\n      unit_name: unit_name,\r\n      unit_price: unit_price\r\n    };\r\n    this.http.post(`${this.uri}/add`, obj)\r\n        .subscribe(res => console.log('Done'));\r\n  }\r\n\r\ngetAdUnits() {\r\n  return this\r\n         .http\r\n         .get(`${this.uri}`);\r\n  }\r\n\r\neditAdUnit(id) {\r\n    return this\r\n              .http\r\n              .get(`${this.uri}/edit/${id}`);\r\n    }\r\n\r\nupdateAdUnit(unit_name, unit_price, id) {\r\n\r\n      const obj = {\r\n        unit_name: unit_name,\r\n        unit_price: unit_price\r\n      };\r\n      this\r\n        .http\r\n        .post(`${this.uri}/update/${id}`, obj)\r\n        .subscribe(res => console.log('Done'));\r\n    }\r\n\r\n\r\n  deleteAdUnit(id) {\r\n      return this\r\n                .http\r\n                .get(`${this.uri}/delete/${id}`);\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SearchService } from '../search.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-widget-search-bar-button',\r\n  templateUrl: './widget-search-bar-button.component.html',\r\n  styleUrls: ['./widget-search-bar-button.component.scss'],\r\n})\r\nexport class WidgetSearchBarButtonComponent implements OnInit {\r\n  constructor(private searchService: SearchService, private router: Router) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onSubmit(f: NgForm) {\r\n    this.searchService.options$ = this.searchService.search(f.value.search);\r\n\r\n    this.searchService.updateSelectedOption({\r\n      id: null,\r\n      name: null,\r\n      price: null,\r\n    });\r\n\r\n    this.searchService.isOptionsEmpty$ = this.searchService.options$.pipe(\r\n      map((options) => (options.length == 0 ? true : false))\r\n    );\r\n\r\n    this.router.navigate(['/search-results-list']);\r\n    f.resetForm();\r\n  }\r\n}\r\n","<form class=\"form-inline my-2 my-lg-0\" #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\">\r\n\t<input class=\"form-control mr-sm-2\" type=\"search\" name=\"search\" ngModel placeholder=\"Search\" aria-label=\"Search\">\r\n\t<button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n</form>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { SearchRoutingModule } from './search-routing.module';\r\nimport { WidgetSearchBarComponent } from './widget-search-bar/widget-search-bar.component';\r\nimport { WidgetSearchBarButtonComponent } from './widget-search-bar-button/widget-search-bar-button.component';\r\nimport { SearchResultListComponent } from './search-result-list/search-result-list.component';\r\nimport { SearchResultItemComponent } from './search-result-item/search-result-item.component';\r\nimport { SearchService} from './search.service';\r\n@NgModule({\r\n  declarations: [\r\n    WidgetSearchBarComponent,\r\n    WidgetSearchBarButtonComponent,\r\n    SearchResultListComponent,\r\n    SearchResultItemComponent,\r\n  ],\r\n  imports: [CommonModule, SearchRoutingModule, HttpClientModule, FormsModule],\r\n  exports: [WidgetSearchBarComponent,\r\n     WidgetSearchBarButtonComponent],\r\n     providers:[SearchService]\r\n})\r\nexport class SearchModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport * as moment from 'moment';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nconst jwt = new JwtHelperService();\r\nclass DecodedToken {\r\n  exp: number;\r\n  username: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  // private uriseg = 'http://localhost:4001/users';\r\n  private uriseg = environment.apiUrl;\r\n  private decodedToken;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.decodedToken = JSON.parse(localStorage.getItem('auth_meta')) || new DecodedToken();\r\n   }\r\n\r\n   public register(userData: any): Observable<any> {\r\n    const URI = this.uriseg + '/users/register';\r\n    return this.http.post(URI, userData);\r\n  }\r\n  public login(userData: any): Observable<any> {\r\n    const URI = this.uriseg + '/users/login';\r\n    return this.http.post(URI, userData).pipe(map(token => {\r\n      return this.saveToken(token);\r\n    }));\r\n  }\r\n\r\n  private saveToken(token: any): any {\r\n    this.decodedToken = jwt.decodeToken(token);\r\n    localStorage.setItem('auth_tkn', token);\r\n    localStorage.setItem('auth_meta', JSON.stringify(this.decodedToken));\r\n    return token;\r\n  }\r\n\r\n  public getToken(): string {\r\n    return localStorage.getItem('auth_tkn');\r\n  }\r\n\r\n  public logout(): void {\r\n    localStorage.removeItem('auth_tkn');\r\n    localStorage.removeItem('auth_meta');\r\n\r\n    this.decodedToken = new DecodedToken();\r\n  }\r\n\r\n    public isAuthenticated(): boolean {\r\n      return moment().isBefore(moment.unix(this.decodedToken.exp));\r\n  }\r\n\r\n      public getUsername(): string {\r\n      return this.decodedToken.username;\r\n  }\r\n  getUser(){\r\n    return this.http.get(`${this.uriseg}/users`);\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-light bg-light\">\r\n  <form class=\"form-inline\">\r\n    <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\r\n    <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n  </form>\r\n</nav>\r\n<table class=\"table table-hover\">\r\n\r\n  <thead>\r\n  <tr>\r\n      <td>Product Name</td>\r\n      <td>Product Description</td>\r\n      <td>Product Price</td>\r\n      <td>Start Date</td>\r\n      <td>End Date</td>\r\n      <td>Status</td>\r\n      <td >Actions</td>\r\n      <td> <button class=\"nav-link\" routerLink=\"/productAdd\" class=\"btn btn-primary\">Add</button></td>\r\n  </tr>\r\n  </thead>\r\n\r\n  <tbody>\r\n      <tr *ngFor=\"let product of products\">\r\n          <td>{{ product.ProductName }}</td>\r\n          <td>{{ product.ProductDescription }}</td>\r\n          <td>{{ product.ProductPrice }}</td>\r\n          <td>{{ product.StartDate }}</td>\r\n          <td>{{ product.EndDate }}</td>\r\n          <td>{{ product.Status }}</td>\r\n          <td><a [routerLink]=\"['/product', product._id]\" class=\"btn btn-primary\">Edit</a></td>\r\n          <td><a (click)=\"deleteProduct(product._id)\" class=\"btn btn-danger\">Delete</a></td>\r\n      </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport Product from '../../../models/Product';\r\nimport {ProductService} from '../../../service/product.service';\r\n\r\n@Component({\r\n  selector: 'app-product-view',\r\n  templateUrl: './product-view.component.html',\r\n  styleUrls: ['./product-view.component.css']\r\n})\r\nexport class ProductViewComponent implements OnInit {\r\nproducts: Product[];\r\n  constructor( private ps: ProductService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.ps.getProducts().subscribe((data: Product[])=>{\r\n      this.products= data;\r\n    })\r\n  }\r\n  deleteProduct(id){\r\n\r\n    this.ps.deleteProduct(id).subscribe(res =>{\r\n      console.log('Product deleted');\r\n    })\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BusinessService {\r\n\r\n  // uri = 'http://localhost:3000/business';\r\n  uri=environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  addBusiness(person_name, business_name, business_gst_number) {\r\n    const obj = {\r\n      person_name: person_name,\r\n      business_name: business_name,\r\n      business_gst_number: business_gst_number\r\n    };\r\n    console.log(obj);\r\n    this.http.post(`${this.uri}/business/add`, obj)\r\n        .subscribe(res => console.log('Done'));\r\n  }\r\n  getBusinesses(){\r\n    return this.http.get(`${this.uri}/business`);\r\n  }\r\n\r\n  editBusiness(id) {\r\n    return this\r\n            .http\r\n            .get(`${this.uri}/business/edit/${id}`);\r\n    }\r\nupdateBusiness(person_name, business_name, business_gst_number, id) {\r\n\r\n      const obj = {\r\n          person_name: person_name,\r\n          business_name: business_name,\r\n          business_gst_number: business_gst_number\r\n        };\r\n      this\r\n        .http\r\n        .post(`${this.uri}/business/update/${id}`, obj)\r\n        .subscribe(res => console.log('Done'));\r\n    }\r\n    deleteBusiness(id) {\r\n      return this\r\n                .http\r\n                .get(`${this.uri}/business/delete/${id}`);\r\n    }\r\n\r\n}\r\n","<nav class=\"navbar navbar-light bg-light\">\r\n  <form class=\"form-inline\">\r\n    <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\r\n    <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n  </form>\r\n</nav>\r\n\r\n<table class=\"table table-hover\">\r\n\r\n  <thead>\r\n  <tr>\r\n      <td>Project Name</td>\r\n      <td>Story</td>\r\n      <td>Duration</td>\r\n      <td >Start day</td>\r\n      <td >End date</td>\r\n      <td >Status</td>\r\n      <td> <button class=\"nav-link\" routerLink=\"/projectAdd\" class=\"btn btn-primary\">Add</button></td>\r\n  </tr>\r\n  </thead>\r\n\r\n  <tbody>\r\n      <tr *ngFor=\"let project of projects\">\r\n          <td>{{ project.projectName }}</td>\r\n          <td>{{ project.story }}</td>\r\n          <td>{{ project.duration }}</td>\r\n          <td>{{ project.startTime }}</td>\r\n          <td>{{ project.endTime }}</td>\r\n          <td>{{ project.status }}</td>\r\n          <td><a [routerLink]=\"['/project', project._id]\" class=\"btn btn-primary\">Edit</a></td>\r\n          <td><a (click)=\"deleteProject(project._id)\" class=\"btn btn-danger\">Delete</a></td>\r\n      </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport Project from '../../../models/Project';\r\nimport {ProjectService} from '../../../service/project.service';\r\n\r\n@Component({\r\n  selector: 'app-p-view',\r\n  templateUrl: './p-view.component.html',\r\n  styleUrls: ['./p-view.component.css']\r\n})\r\nexport class PViewComponent implements OnInit {\r\nprojects : Project[];\r\n  constructor(private pjs: ProjectService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.pjs.getProjects().subscribe((data: Project[])=>{\r\n      this.projects = data;\r\n      console.log(data);\r\n    })\r\n  }\r\ndeleteProject(id){\r\n  this.pjs.deleteProject(id).subscribe(res =>{\r\n    console.log('Project Deleted')\r\n  })\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  uri = 'http://localhost:4001/products';\r\n  constructor( private http: HttpClient) { }\r\n  addProduct(ProductName, ProductDescription, ProductPrice, StartDate, EndDate, Status) {\r\n    const obj = {\r\n      ProductName,\r\n      ProductDescription,\r\n      ProductPrice,\r\n      StartDate,\r\n      EndDate,\r\n      Status\r\n    };\r\n    console.log(obj);\r\n    this.http.post(`${this.uri}/add`, obj)\r\n        .subscribe(res => console.log('Done'));\r\n  }\r\n  getProducts(){\r\n    return this.http.get(`${this.uri}`);\r\n  }\r\n  editProduct(id){\r\n    return this.http.get(`${this.uri}/edit/${id}`);\r\n  }\r\n    updateProduct(ProductName, ProductDescription, ProductPrice, StartDate, EndDate, Status, id) {\r\n      const obj = {\r\n        ProductName,\r\n        ProductDescription,\r\n        ProductPrice,\r\n        StartDate,\r\n        EndDate,\r\n        Status\r\n      };\r\n      this\r\n        .http\r\n        .post(`${this.uri}/update/${id}`, obj)\r\n        .subscribe(res => console.log('Done'));\r\n  }\r\n  deleteProduct(id){\r\n    return this.http.get(`${this.uri}/delete/${id}`);\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-light bg-light\">\r\n  <form class=\"form-inline\">\r\n    <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\r\n    <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n  </form>\r\n  <!-- <button (click)=\"exportexcel()\" class=\"btn btn-primary\">  <span class=\"material-icons\">\r\n    file_download\r\n    </span>export excel</button> -->\r\n\r\n</nav>\r\n<table class=\"table table-hover\" id=\"excel-table\" >\r\n\r\n  <thead>\r\n  <tr>\r\n      <td>Name</td>\r\n      <td>Email</td>\r\n      <td>Created At</td>\r\n\r\n      <td >Actions</td>\r\n      <td> <button class=\"nav-link\" routerLink=\"/auth/register\" class=\"btn btn-primary\">Add</button></td>\r\n  </tr>\r\n  </thead>\r\n\r\n  <tbody>\r\n      <tr *ngFor=\"let user of users\">\r\n          <td>{{ user.username }}</td>\r\n          <td>{{ user.email }}</td>\r\n          <td>{{ user.updatedAt | date:'medium'}}</td>\r\n          <td><a  class=\"btn btn-primary\">Edit</a></td>\r\n          <td><a  class=\"btn btn-danger\">Delete</a></td>\r\n      </tr>\r\n  </tbody>\r\n</table>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { User} from '../../../models/User';\r\nimport {AuthService} from '../auth.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport * as XLSX from 'xlsx';\r\n\r\n@Component({\r\n  selector: 'app-user-view',\r\n  templateUrl: './user-view.component.html',\r\n  styleUrls: ['./user-view.component.css']\r\n})\r\nexport class UserViewComponent implements OnInit {\r\n  users: User[];\r\n  // fileName= 'ExcelSheet.xlsx';\r\n  constructor( private as: AuthService, private http : HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.as.getUser().subscribe((data: User[]) => {\r\n      this.users = data;\r\n      console.log(data)\r\n    })\r\n  }\r\n\r\n  // exportexcel(): void\r\n  // {\r\n  //   /* pass here the table id */\r\n  //   let element = document.getElementById('excel-table');\r\n  //   const ws: XLSX.WorkSheet =XLSX.utils.table_to_sheet(element);\r\n\r\n  //   /* generate workbook and add the worksheet */\r\n  //   const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n  //   XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n\r\n  //   /* save to file */\r\n  //   XLSX.writeFile(wb, this.fileName);\r\n\r\n  // }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.css']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {CoinService}from '../../service/coin.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { FormGroup,  FormBuilder,  Validators, FormControl } from '@angular/forms';\r\nimport { Subject, throwError } from 'rxjs';\r\nimport { map, debounceTime, distinctUntilChanged, switchMap, catchError, retryWhen, retry} from 'rxjs/operators'\r\nimport * as XLSX from 'xlsx';\r\nimport {SearchService } from '../search/search.service';\r\n\r\n@Component({\r\n  selector: 'app-coin-views',\r\n  templateUrl: './coin-views.component.html',\r\n  styleUrls: ['./coin-views.component.css']\r\n})\r\nexport class CoinViewsComponent implements OnInit {\r\n  coins : any;\r\n  fileName= 'ExcelSheet.xlsx';\r\n  constructor(private http: HttpClient,\r\n              private cs: CoinService,\r\n              private route: ActivatedRoute,\r\n              private router: Router,) { }\r\n              public searchService: SearchService;\r\n              public loading : boolean;\r\n              public searchTerm = new Subject<string>();\r\n              public searchResults: any;\r\n              public paginationElements: any;\r\n              public errorMessage: any;\r\n              public searchForm = new FormGroup({\r\n                search: new FormControl(\"\", Validators.required)\r\n              })\r\n\r\n  ngOnInit(): void {\r\n    this.getCoins();\r\n  }\r\ngetCoins(){\r\n    this.cs.getCoins().subscribe(res =>{\r\n      this.coins = res;\r\n      console.log(this.getCoins);\r\n    });\r\n  }\r\n\r\n  deleteCoin(id) {\r\n    this.cs.deleteCoin(id).subscribe(res => {\r\n      this.router.navigate(['coins']);\r\n      console.log('Deleted');\r\n    });\r\n}\r\n\r\n\r\nexportexcel(): void\r\n{\r\n  /* pass here the table id */\r\n  let element = document.getElementById('excel-table');\r\n  const ws: XLSX.WorkSheet =XLSX.utils.table_to_sheet(element);\r\n\r\n  /* generate workbook and add the worksheet */\r\n  const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n  XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n\r\n  /* save to file */\r\n  XLSX.writeFile(wb, this.fileName);\r\n\r\n}\r\n\r\n\r\n\r\n}\r\n","<!-- <app-widget-search-bar></app-widget-search-bar> -->\r\n<nav class=\"navbar navbar-light bg-light\">\r\n  <!-- <form class=\"form-inline\">\r\n    <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\r\n    <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n  </form> -->\r\n\r\n    <app-widget-search-bar-button></app-widget-search-bar-button>\r\n\r\n\r\n</nav>\r\n<div class=\"space\">\r\n\r\n  <table class=\"table table-hover\">\r\n    <thead>\r\n      <tr>\r\n        <td>Coin Name</td>\r\n        <td>Coin Price</td>\r\n        <td>Date</td>\r\n        <td>Action\r\n\r\n        </td>\r\n        <td> <button class=\"nav-link\" routerLink=\"/add\" class=\"btn btn-primary\">\r\n          <span class=\" navIcon material-icons\">add</span> Create</button></td>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\" let coin of coins\">\r\n        <td>{{coin.name}}  </td>\r\n        <td>{{coin.price}}  </td>\r\n        <td>{{coin.updatedAt | date:'medium'}}  </td>\r\n              <td><button [routerLink]=\"['/edit', coin._id]\"  class=\"btn btn-primary\">\r\n                <span class=\" navIcon material-icons\">edit</span> </button>\r\n         <span> </span> <button (click)=\"deleteCoin(coin._id)\" class=\"btn btn-danger\">\r\n          <span class=\" navIcon material-icons\">delete</span></button> </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {CoinService} from '../../service/coin.service';\r\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-coin-add',\r\n  templateUrl: './coin-add.component.html',\r\n  styleUrls: ['./coin-add.component.css']\r\n})\r\nexport class CoinAddComponent implements OnInit {\r\n\r\n  title = 'Add Coin';\r\n  angForm : FormGroup;\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private coinService: CoinService,\r\n              private fb: FormBuilder) {\r\n                this.createForm();\r\n              }\r\n  createForm(){\r\n    this.angForm=this.fb.group({\r\n      name:['', Validators.required],\r\n      price:['', Validators.required]\r\n    })\r\n  }\r\n\r\n  addCoin(name, price){\r\n    this.coinService.addCoin(name, price);\r\n    this.router.navigate(['coins']);\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n  <p>add coin</p>\r\n  </div>\r\n\r\n    <form [formGroup]=\"angForm\" novalidate>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Coin Name</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"name\" #name />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['name'].invalid && (angForm.controls['name'].dirty || angForm.controls['name'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['name'].errors.required\">\r\n          Name is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Coin Price</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"price\" #price/>\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['price'].invalid && (angForm.controls['price'].dirty || angForm.controls['price'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['price'].errors.required\">\r\n          Price is required.\r\n        </div>\r\n      </div>\r\n        <div class=\"form-group\">\r\n          <button (click)=\"addCoin(name.value, price.value)\" [disabled]=\"angForm.pristine || angForm.invalid\" class=\"btn btn-primary\">Add</button>\r\n        </div>\r\n    </form>\r\n  </div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\r\nimport { ProductService } from 'src/app/service/product.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-product-add',\r\n  templateUrl: './product-add.component.html',\r\n  styleUrls: ['./product-add.component.css']\r\n})\r\nexport class ProductAddComponent implements OnInit {\r\nangForm : FormGroup;\r\nmodel :'Product Add';\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private fb: FormBuilder,\r\n              private ps:ProductService) {\r\n    this.createForm();\r\n   }\r\n\r\n   createForm(){\r\n    this.angForm = this.fb.group({\r\n      ProductName: ['', Validators.required ],\r\n      ProductDescription: ['', Validators.required ],\r\n      ProductPrice: ['', Validators.required ],\r\n      StartDate: ['', Validators.required ],\r\n      EndDate: ['', Validators.required ],\r\n      Status: ['', Validators.required ],\r\n    });\r\n\r\n   }\r\n   addProduct(ProductName, ProductDescription, ProductPrice, StartDate, EndDate, Status) {\r\n    this.ps.addProduct(ProductName, ProductDescription, ProductPrice, StartDate, EndDate, Status);\r\n    this.router.navigate(['products'])\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"card\">\r\n\r\n  <div class=\"card-body\">\r\n    <form [formGroup]=\"angForm\" novalidate>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Product Name</label>\r\n        <input type=\"text\" class=\"form-control\"\r\n          formControlName=\"ProductName\"\r\n          #ProductName />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['ProductName'].invalid && (angForm.controls['ProductName'].dirty || angForm.controls['ProductName'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['ProductName'].errors.required\">\r\n          Product Name is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Product Description </label>\r\n        <textarea class=\"form-control\" rows = 7 cols = \"5\"\r\n        formControlName=\"ProductDescription\"\r\n        #ProductDescription></textarea>\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['ProductDescription'].invalid && (angForm.controls['ProductDescription'].dirty || angForm.controls['ProductDescription'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['ProductDescription'].errors.required\">\r\n          Product Description is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Product Price</label>\r\n        <input type=\"text\" class=\"form-control\"\r\n          formControlName=\"ProductPrice\"\r\n          #ProductPrice\r\n        />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['ProductPrice'].invalid && (angForm.controls['ProductPrice'].dirty || angForm.controls['ProductPrice'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['ProductPrice'].errors.required\">\r\n          Product Price is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Start Date</label>\r\n        <input type=\"date\" class=\"form-control\"\r\n          formControlName=\"StartDate\"\r\n          #StartDate\r\n        />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['StartDate'].invalid && (angForm.controls['StartDate'].dirty || angForm.controls['StartDate'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['StartDate'].errors.required\">\r\n          Start Date is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">End Date</label>\r\n        <input type=\"date\" class=\"form-control\"\r\n          formControlName=\"EndDate\"\r\n          #EndDate\r\n        />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['EndDate'].invalid && (angForm.controls['EndDate'].dirty || angForm.controls['EndDate'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['EndDate'].errors.required\">\r\n          End Date is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Status</label>\r\n        <input type=\"text\" class=\"form-control\"\r\n          formControlName=\"Status\"\r\n          #Status\r\n        />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['Status'].invalid && (angForm.controls['Status'].dirty || angForm.controls['Status'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['Status'].errors.required\">\r\n          End Date is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button (click) = \"addProduct(ProductName.value, ProductDescription.value, ProductPrice.value, StartDate.value, EndDate.value, Status.value)\" type=\"submit\" class=\"btn btn-primary\"\r\n        [disabled]=\"angForm.pristine || angForm.invalid\" >\r\n          Create Product\r\n        </button>\r\n</div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,  FormBuilder,  Validators, Form } from '@angular/forms';\r\nimport { ProjectService} from '../../../service/project.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-p-edit',\r\n  templateUrl: './p-edit.component.html',\r\n  styleUrls: ['./p-edit.component.css']\r\n})\r\nexport class PEditComponent implements OnInit {\r\n  angForm : FormGroup;\r\n  project : any = {};\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private fb: FormBuilder,\r\n              private pjs: ProjectService) {\r\n                this.createForm()\r\n              }\r\n\r\n    createForm(){\r\n        this.angForm = this.fb.group({\r\n                projectName: ['', Validators.required ],\r\n                story: ['', Validators.required ],\r\n                duration: ['', Validators.required ],\r\n                startTime: ['', Validators.required ],\r\n                endTime: ['', Validators.required ],\r\n                status: ['', Validators.required ],\r\n              })\r\n        }\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params =>{\r\n      this.pjs.editProject(params['id']).subscribe(res => {\r\n        this.project = res;\r\n    })\r\n  })\r\n  }\r\n\r\n  updateProject( projectName, story, duration, startTime, endTime, status){\r\n    this.route.params.subscribe(params =>{\r\n      this.pjs.updateProject(projectName, story, duration, startTime, endTime, status, params['id']);\r\n    this.router.navigate(['projects']);\r\n\r\n    })\r\n\r\n      }\r\n\r\n\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <form [formGroup]=\"angForm\" novalidate>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">project Name</label>\r\n        <input type=\"text\" class=\"form-control\"\r\n          formControlName=\"projectName\"\r\n          #projectName\r\n          [(ngModel)] = \"project.projectName\"/>\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['projectName'].invalid && (angForm.controls['projectName'].dirty || angForm.controls['projectName'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['projectName'].errors.required\">\r\n          Project Name is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">project Description </label>\r\n        <textarea class=\"form-control\" rows = 7 cols = \"5\"\r\n        formControlName=\"story\"\r\n        #story [(ngModel)] = \"project.story\"></textarea>\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['story'].invalid && (angForm.controls['story'].dirty || angForm.controls['story'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['story'].errors.required\">\r\n          story is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Duration</label>\r\n        <input type=\"text\" class=\"form-control\"\r\n          formControlName=\"duration\"\r\n          #duration\r\n          [(ngModel)] = \"project.duration\"\r\n        />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['duration'].invalid && (angForm.controls['duration'].dirty || angForm.controls['duration'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['duration'].errors.required\">\r\n          project Price is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Start Date</label>\r\n        <input type=\"date\" class=\"form-control\"\r\n          formControlName=\"startTime\"\r\n          #startTime\r\n          [(ngModel)] = \"project.startTime\"\r\n        />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['startTime'].invalid && (angForm.controls['startTime'].dirty || angForm.controls['startTime'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['startTime'].errors.required\">\r\n          startTime is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">End Date</label>\r\n        <input type=\"date\" class=\"form-control\"\r\n          formControlName=\"endTime\"\r\n          #endTime\r\n          [(ngModel)] = \"project.endTime\"\r\n        />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['endTime'].invalid && (angForm.controls['endTime'].dirty || angForm.controls['endTime'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['endTime'].errors.required\">\r\n          endTime is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Status</label>\r\n        <input type=\"text\" class=\"form-control\"\r\n          formControlName=\"status\"\r\n          #status\r\n          [(ngModel)] = \"project.status\"\r\n        />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['status'].invalid && (angForm.controls['status'].dirty || angForm.controls['status'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['status'].errors.required\">\r\n          endTime is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button (click) = \"updateProject(projectName.value, story.value, duration.value, startTime.value, endTime.value, status.value)\" type=\"submit\" class=\"btn btn-primary\"\r\n        [disabled]=\"angForm.invalid\" >\r\n          Update project\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\r\nimport {BusinessService} from '../../../service/business.service';\r\n\r\n@Component({\r\n  selector: 'app-gst-edit',\r\n  templateUrl: './gst-edit.component.html',\r\n  styleUrls: ['./gst-edit.component.css']\r\n})\r\nexport class GstEditComponent implements OnInit {\r\n\r\n  business: any = {};\r\n  angForm: FormGroup;\r\n\r\n   constructor(private route: ActivatedRoute,\r\n    private router: Router,\r\n    private bs: BusinessService,\r\n    private fb: FormBuilder) {\r\n      this.createForm();\r\n }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n        person_name: ['', Validators.required ],\r\n        business_name: ['', Validators.required ],\r\n        business_gst_number: ['', Validators.required ]\r\n      });\r\n    }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      this.bs.editBusiness(params['id']).subscribe(res => {\r\n        this.business = res;\r\n    });\r\n  });\r\n  }\r\n    updateBusiness(person_name, business_name, business_gst_number) {\r\n        this.route.params.subscribe(params => {\r\n          this.bs.updateBusiness(person_name, business_name, business_gst_number, params['id']);\r\n          this.router.navigate(['business']);\r\n    });\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <form [formGroup]=\"angForm\" novalidate>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Person Name</label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"person_name\" #person_name [(ngModel)] = \"business.person_name\" />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['person_name'].invalid && (angForm.controls['person_name'].dirty || angForm.controls['person_name'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['person_name'].errors.required\">\r\n          Person Name is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Business Name </label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"business_name\" #business_name [(ngModel)] = \"business.business_name\" />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['business_name'].invalid && (angForm.controls['business_name'].dirty || angForm.controls['business_name'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['business_name'].errors.required\">\r\n          Person Business is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-md-4\">Business GST Number </label>\r\n        <input type=\"text\" class=\"form-control\" formControlName=\"business_gst_number\" #business_gst_number [(ngModel)] = \"business.business_gst_number\" />\r\n      </div>\r\n      <div *ngIf=\"angForm.controls['business_gst_number'].invalid && (angForm.controls['business_gst_number'].dirty || angForm.controls['business_gst_number'].touched)\" class=\"alert alert-danger\">\r\n        <div *ngIf=\"angForm.controls['business_gst_number'].errors.required\">\r\n          Business GST Number is required.\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button (click)=\"updateBusiness(person_name.value, business_name.value, business_gst_number.value)\"\r\n        [disabled]=\"angForm.invalid\"\r\n        class=\"btn btn-primary\">Update Business</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport 'rxjs/Rx'\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}